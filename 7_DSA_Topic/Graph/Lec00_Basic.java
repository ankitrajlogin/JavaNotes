


/*
ðŸ”¹ 1. What is a Graph?
    A graph is a non-linear data structure consisting of:
        - Vertices (nodes) â€“ entities in the graph.
        - Edges (links) â€“ connections between vertices.

    Graphs are used to represent real-world relationships like social networks, road maps, web links, etc.



2. Terminologies
    Vertex (V): A node in the graph.
    Edge (E): A connection between two vertices.
    Path: A sequence of vertices connected by edges.
    Cycle: A path where the starting and ending vertex is the same.
    Degree (Undirected Graph):
        - Degree of vertex = number of edges attached.
        - Property: Sum of degrees = 2E.
    
    In-degree / Out-degree (Directed Graph):
        - In-degree: Number of incoming edges.
        - Out-degree: Number of outgoing edges.

    Weighted Graph: Edges have weights (cost/distance).
    Unweighted Graph: All edges assumed to have weight = 1

    

Types of Graphs
    1. Undirected Graph â†’ edges have no direction. (friendship graph)
    2. Directed Graph (Digraph) â†’ edges have direction. (Twitter followers)
    3. Weighted Graph â†’ edges have weights (distances, costs, etc.).
    4. Unweighted Graph â†’ edges have no weights.
    5. Cyclic Graph â†’ at least one cycle exists.
    6. Acyclic Graph â†’ no cycles (e.g., tree, DAG).
    7. Connected Graph â†’ path exists between every pair of nodes.
    8. Disconnected Graph â†’ not all nodes are reachable.
 */
public class Lec00_Basic {

    
}
